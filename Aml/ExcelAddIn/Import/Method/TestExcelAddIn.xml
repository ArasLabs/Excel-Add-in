<AML>
 <Item type="Method" id="3EE4DB0CCCF74AF2AF3E3CA878F19AE2" action="add">
  <execution_allowed_to keyed_name="Administrators" type="Identity">2618D6F5A90949BAA7E920D1B04C7EE1</execution_allowed_to>
  <method_code><![CDATA[    Innovator = this.getInnovator();
    try 
    {
        var customBomStructureNodeList = this.dom.SelectNodes("//ArrayOfLeafNodesOfCustomBomStructure/LeafNodesOfCustomBomStructure");

        foreach (XmlNode customBomStructure in customBomStructureNodeList)
        {
            var item = CreateBomStructure(customBomStructure);
            var res = item.apply();
            
            if(res.isError())
                break;
        }

        return Innovator.newResult("BOM structure was successfully builded.");
    }
    catch(Exception exc)
    {
        return Innovator.newError(exc.Message);
    }
}


private Item CreateBomStructure(XmlNode node)
{
     var itemNode = node.SelectSingleNode("./ParendNodeOfCustomBomStructure");
     var partNumber = itemNode.SelectSingleNode("./PartNumber");
     var name = itemNode.SelectSingleNode("./Name");
     
     var partItm = Innovator.newItem("Part", "add");
     partItm.setProperty("item_number", partNumber.InnerText);
     partItm.setProperty("name", name.InnerText);
    
    
     var children = node.SelectNodes("./LeafNodesOfCustomBomStructure");
     foreach(XmlNode customBomStructure in children)
     {
         var quantity = customBomStructure.SelectSingleNode("./ParendNodeOfCustomBomStructure/Quantity");
         var relationship = partItm.createRelationship("Part BOM", "add");

         relationship.setRelatedItem(CreateBomStructure(customBomStructure));
         relationship.setProperty("quantity", quantity.InnerText);
     }
     
     return partItm;
}



private Innovator Innovator;

private void DummyMethod() {]]></method_code>
  <method_type>C#</method_type>
  <name>TestExcelAddInExample</name>
 </Item>
</AML>